name: Get latest versions

on:
  workflow_dispatch:
  push:
    branches:
    - main
  schedule:
  - cron: "0 */4 * * *"

jobs:
  get-version:
    runs-on: ubuntu-20.04
    steps:
    # - name: Get app token
    #   id: get-app-token
    #   uses: getsentry/action-github-app-token@v1
    #   with:
    #     app_id: ${{ secrets.APP_ID }}
    #     private_key: ${{ secrets.APP_PRIVATE_KEY }}
    - uses: actions/checkout@v2
      with:
        token: ${{ secret.GITHUB_TOKEN }}
        fetch-depth: 1
    - name: Fetch new base versions
      run: |
        find ./base -maxdepth 1 -mindepth 1 -type d -exec basename {} \; | while read app; do
          if test -f "./base/${app}/latest-version.sh"; then
            version=$(bash "./base/${app}/latest-version.sh")
            if [[ ! -z "${version}" || "${version}" != "null" ]]; then
              echo "${version}" | tee "./base/${app}/VERSION" > /dev/null
              echo "${app} ${version}"
            fi
          fi
        done
    - name: Fetch new app versions
      run: |
        find ./apps -maxdepth 1 -mindepth 1 -type d -exec basename {} \; | while read app; do
          if test -f "./apps/${app}/latest-version.sh"; then
            version=$(bash "./apps/${app}/latest-version.sh")
            if [[ ! -z "${version}" || "${version}" != "null" ]]; then
              echo "${version}" | tee "./apps/${app}/VERSION" > /dev/null
              echo "${app} ${version}"
            fi
          fi
        done
    - name: Add, commit and push to applications version file
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          git config user.name "jr0dd"
          git config user.email "jr0dd@users.noreply.github.com"
          git add -A
          git commit -sam "chore: add new release versions" || exit 0
          git push
        fi